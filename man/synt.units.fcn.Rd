% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synt.units.fcn.R
\name{synt.units.fcn}
\alias{synt.units.fcn}
\title{Generate a List of Syntactic Units}
\usage{
synt.units.fcn(df, colnames = c(TOKEN = "TOKEN", POSITION = "POSITION",
DEP_ON = "DEP_ON", DEP_TYPE = "DEP_TYPE", POS = "POS.MELT", LEMMA = "LEMMA"))
}
\arguments{
\item{df}{A data frame which contains a sentence in CONLL format}

\item{colnames}{A named vector containing the names of the following columns:
\itemize{
\item TOKEN: name of the column with the tokens
\item POSITION: name of column with the word index
\item DEP_ON: name of column with the dependency heads
\item DEP_TYPE: name of column with the dependency relations
\item POS: name of column with the part of speech tags
\item LEMMA: name of column with the lemmas
}}
}
\value{
The output is a list containing, for each  syntactic
unit:
\itemize{
\item the NUMBER identified units (integer)
\item the LENGTHS of units (integer vector)
\item the TOKENS belonging to each unit (list of character vectors)
}
}
\description{
This function returns a list of syntactic units (sentences, t-units, clauses
dependent clauses, coordinated clauses, verb phrases and noun phrases) from
a dependency parsed sentence in CONLL format.
}
\examples{
#`example`is a csv containing a sentence in CONLL format
data(example)

#Run function (full analysis)
synt.units.fcn(example)

#The output of the function is a list which can be subset
str(synt.units.fcn(example)[["VERB_PHRASES"]])

#subset further to return the counts, lengths or tokens
synt.units.fcn(example)[["VERB_PHRASES"]][["NUMBER"]]
synt.units.fcn(example)[["VERB_PHRASES"]][["LENGTHS"]]
synt.units.fcn(example)[["VERB_PHRASES"]][["TOKENS"]]

#Because NUMBER is an integer vector, calculations can also be done
#directly on the output

vp_len <- synt.units.fcn(example)[["VERB_PHRASES"]][["LENGTHS"]]
mean(vp_len)
sd(vp_len)


}
